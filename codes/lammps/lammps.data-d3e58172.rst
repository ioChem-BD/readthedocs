.. _lammps.data-d3e58172:

lammps.data
===========

.. table:: Implementation level

   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
   | Type                                                                                                                       | Status                                                                                                                     |
   +============================================================================================================================+============================================================================================================================+
   | CML extraction template                                                                                                    | |image1|                                                                                                                   |
   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
   | HTML5 representation                                                                                                       | |image2|                                                                                                                   |
   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+

.. table:: Template attributes

   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
   | Attribute                                                                                                                  | Value                                                                                                                      |
   +============================================================================================================================+============================================================================================================================+
   | *source*                                                                                                                   | LAMMPS data file                                                                                                           |
   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
   | id                                                                                                                         | lammps.data                                                                                                                |
   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
   | name                                                                                                                       | LAMMPS data file                                                                                                           |
   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+
   | xml:base                                                                                                                   | topTemplate.xml                                                                                                            |
   +----------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------+

.. container:: formalpara-title

   **Comment**

::

.. container:: formalpara-title

   **Input**

::

   # UO2 8x8x8

       6144  atoms

          2  atom types

    0.00000000e+00  4.33627680e+01  xlo xhi
    0.00000000e+00  4.33627680e+01  ylo yhi
    0.00000000e+00  4.33627680e+01  zlo zhi
    0.0 0.0 0.0 xy xz yz

    Atoms

          1        1  2.710173e+00  0.000000e+00  0.000000e+00
          2        1  2.710173e+00  2.710173e+00  2.710173e+00
          3        1  0.000000e+00  0.000000e+00  2.710173e+00
          4        1  0.000000e+00  2.710173e+00  0.000000e+00
          5        2  1.355087e+00  4.065260e+00  4.065260e+00
          6        2  1.355087e+00  1.355087e+00  4.065260e+00
          7        2  1.355087e+00  1.355087e+00  1.355087e+00
          ...

    Velocities

          1  0.000000e+00  0.000000e+00  0.000000e+00
          2  0.000000e+00  0.000000e+00  0.000000e+00
          3  0.000000e+00  0.000000e+00  0.000000e+00
          4  0.000000e+00  0.000000e+00  0.000000e+00
          ...

    Masses

          1  2.380289e+02 # U
          2  1.599940e+01 # O
                 
       

.. container:: formalpara-title

   **Output text**

.. code:: xml

   <comment class="example.output" id="lammps.data">
           <module id="lammps.data">     
              <module cmlx:templateRef="box">
                 <scalar dataType="xsd:double" dictRef="l:xlo">0.00000000e+00</scalar>
                 <scalar dataType="xsd:double" dictRef="l:xhi">4.33627680e+01</scalar>
                 <scalar dataType="xsd:double" dictRef="l:ylo">0.00000000e+00</scalar>
                 <scalar dataType="xsd:double" dictRef="l:yhi">4.33627680e+01</scalar>
                 <scalar dataType="xsd:double" dictRef="l:zlo">0.00000000e+00</scalar>
                 <scalar dataType="xsd:double" dictRef="l:zhi">4.33627680e+01</scalar>
              </module>
              <module cmlx:templateRef="tilt">
                 <scalar dataType="xsd:double" dictRef="l:xyTilt">0.0</scalar>
                 <scalar dataType="xsd:double" dictRef="l:xzTilt">0.0</scalar>
                 <scalar dataType="xsd:double" dictRef="l:yzTilt">0.0</scalar>
              </module>
              <module cmlx:templateRef="atoms">
                 <list cmlx:templateRef="records">
                     <list>
                        <scalar dataType="xsd:integer" dictRef="x:serial">1</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2.710173e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">0.000000e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">0.000000e+00</scalar>
                     </list>
                     <list>
                        <scalar dataType="xsd:integer" dictRef="x:serial">2</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2.710173e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2.710173e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2.710173e+00</scalar>
                     </list>
                     <list>
                        <scalar dataType="xsd:integer" dictRef="x:serial">3</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">0.000000e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">0.000000e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2.710173e+00</scalar>
                     </list>
                     <list>
                        <scalar dataType="xsd:integer" dictRef="x:serial">4</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">0.000000e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2.710173e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">0.000000e+00</scalar>
                     </list>
                     <list>
                        <scalar dataType="xsd:integer" dictRef="x:serial">5</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1.355087e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">4.065260e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">4.065260e+00</scalar>
                     </list>
                     <list>
                        <scalar dataType="xsd:integer" dictRef="x:serial">6</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1.355087e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1.355087e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">4.065260e+00</scalar>
                     </list>
                     <list>
                        <scalar dataType="xsd:integer" dictRef="x:serial">7</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">2</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1.355087e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1.355087e+00</scalar>
                        <scalar dataType="xsd:double" dictRef="x:field">1.355087e+00</scalar>
                     </list>
                 </list>
                 <list dictRef="l:axis">
                    <array dictRef="cc:lattice">43.362768 0 0</array>
                    <array dictRef="cc:lattice">0 43.362768 0</array>
                    <array dictRef="cc:lattice">0 0 43.362768</array>
                 </list>
              </module>
              <module cmlx:templateRef="masses">
                 <list cmlx:templateRef="atomType">
                    <list>
                       <scalar dataType="xsd:integer" dictRef="x:serial">1</scalar>
                       <scalar dataType="xsd:double" dictRef="cc:atomicmass">2.380289e+02</scalar>
                       <scalar dictRef="cc:atomType">U</scalar>
                    </list>
                    <list>
                       <scalar dataType="xsd:integer" dictRef="x:serial">2</scalar>
                       <scalar dataType="xsd:double" dictRef="cc:atomicmass">1.599940e+01</scalar>
                       <scalar dictRef="cc:atomType">O</scalar>
                    </list>
                 </list>
                 <map id="atomTypeLabels">
                    <link from="1" to="U" />
                    <link from="2" to="O" />
                 </map>
              </module>
           </module>         
       </comment>

.. container:: formalpara-title

   **Template definition**

.. code:: xml

   <templateList>  <template id="box" name="box" pattern=".*xlo\s+xhi" endPattern=".*zlo\s+zhi" endOffset="1">    <record>{E,l:xlo}{E,l:xhi}xlo\s+xhi</record>    <record>{E,l:ylo}{E,l:yhi}ylo\s+yhi</record>    <record>{E,l:zlo}{E,l:zhi}zlo\s+zhi</record>    <transform process="pullup" xpath=".//cml:scalar" repeat="2" />    
           </template>  <template id="tilt" pattern=".*xy\s+xz\s+yz" endPattern=".*" endOffset="0">    <record>{E,l:xyTilt}{E,l:xzTilt}{E,l:yzTilt}xy\s+xz\s+yz</record>    <transform process="pullup" xpath=".//cml:scalar" repeat="2" />  
           </template>  <template id="atoms" pattern="\s*Atoms\s*(#.*)?$.*$\s*(\S+\s+){10}\S+\s*" endPattern=".*[0-9]\s*$\s*" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="records" repeat="*">{I,x:serial}\s{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}</record>                            
           </template>  <template id="atoms" pattern="\s*Atoms\s*(#.*)?$.*$\s*(\S+\s+){9}\S+\s*" endPattern=".*[0-9]\s*$\s*" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="records" repeat="*">{I,x:serial}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}</record>          
           </template>  <template id="atoms" pattern="\s*Atoms\s*(#.*)?$.*$\s*(\S+\s+){8}\S+\s*" endPattern=".*[0-9]\s*$\s*" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="records" repeat="*">{I,x:serial}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}</record>
           </template>  <template id="atoms" pattern="\s*Atoms\s*(#.*)?$.*$\s*(\S+\s+){7}\S+\s*" endPattern=".*[0-9]\s*$\s*" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="records" repeat="*">{I,x:serial}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}</record>          
           </template>  <template id="atoms" pattern="\s*Atoms\s*(#.*)?$.*$\s*(\S+\s+){6}\S+\s*" endPattern=".*[0-9]\s*$\s*" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="records" repeat="*">{I,x:serial}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}</record>            
           </template>  <template id="atoms" pattern="\s*Atoms\s*(#.*)?$.*$\s*(\S+\s+){5}\S+\s*" endPattern=".*[0-9]\s*$\s*" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="records" repeat="*">{I,x:serial}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}</record>          
           </template>  <template id="atoms" pattern="\s*Atoms\s*(#.*)?$.*$\s*(\S+\s+){4}\S+\s*" endPattern=".*[0-9]\s*$\s*" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="records" repeat="*">{I,x:serial}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}\s+{E,x:field}</record>                        
           </template>  <template id="masses" pattern="\s*Masses\s*(#.*)?" endPattern="\s*[0-9].*$\s+" endPattern2="~" endOffset="1">    <record repeat="2" />    <record id="atomType" name="atomType" repeat="*">{I,x:serial}{E,cc:atomicmass}.*</record>    <transform process="addChild" xpath=".//cml:list[@cmlx:templateRef='atomType']/cml:list" elementName="cml:scalar" dictRef="cc:atomType" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(1.0079,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="H" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(4.0026,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="He" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(6.941,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Li" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(9.0122,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Be" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(10.811,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="B" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(12.0107,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="C" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(14.0067,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="N" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(15.9994,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="O" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(18.9984,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="F" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(20.1797,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ne" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(22.9897,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Na" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(24.305,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Mg" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(26.9815,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Al" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(28.0855,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Si" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(30.9738,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="P" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(32.065,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="S" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(35.453,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cl" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(39.948,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ar" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(39.0983,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="K" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(40.078,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ca" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(44.9559,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Sc" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(47.867,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ti" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(50.9415,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="V" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(51.9961,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cr" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(54.9381,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Mn" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(55.845,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Fe" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(58.9332,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Co" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(58.6934,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ni" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(63.546,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cu" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(65.409,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Zn" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(69.723,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ga" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(72.64,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ge" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(74.9216,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="As" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(78.96,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Se" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(79.904,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Br" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(83.798,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Kr" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(85.4678,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Rb" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(87.62,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Sr" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(88.9059,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Y" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(91.224,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Zr" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(92.9064,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Nb" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(95.94,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Mo" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(98,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Tc" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(101.07,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ru" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(102.9055,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Rh" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(106.42,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Pd" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(107.8682,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ag" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(112.411,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cd" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(114.818,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="In" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(118.71,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Sn" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(121.76,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Sb" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(127.6,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Te" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(126.9045,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="I" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(131.293,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Xe" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(132.9055,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cs" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(137.327,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ba" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(178.49,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Hf" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(180.9479,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ta" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(183.84,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="W" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(186.207,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Re" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(190.23,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Os" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(192.217,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ir" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(195.079,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Pt" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(196.9665,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Au" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(200.59,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Hg" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(204.3833,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Tl" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(207.2,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Pb" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(208.9804,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Bi" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(209,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Po" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(210,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="At" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(222,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Rn" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(223,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Fr" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(226,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ra" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(261,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Rf" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(262,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Db" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(266,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Sg" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(264,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Bh" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(277,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Hs" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(268,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Mt" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(281,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ds" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(272,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Rg" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(285,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cn" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(286,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Nh" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(289,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Fl" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(290,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Mc" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(292,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Lv" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(294,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ts" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(294,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Og" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(138.9055,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="La" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(140.116,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ce" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(140.9077,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Pr" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(144.24,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Nd" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(145,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Pm" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(150.36,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Sm" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(151.964,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Eu" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(157.25,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Gd" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(158.9253,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Tb" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(162.5,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Dy" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(164.9303,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ho" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(167.259,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Er" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(168.9342,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Th" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(173.04,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Yb" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(174.967,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Lu" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(227,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Ac" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(232.0381,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Th" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(231.0359,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Pa" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(238.0289,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="U" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(237,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Np" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(244,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Pu" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(243,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Am" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(247,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cm" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(247,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Bk" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(251,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Cf" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(252,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Es" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(257,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Fm" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(258,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Md" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(259,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="No" />    <transform process="setValue" xpath=".//cml:scalar[@dictRef='cc:atomicmass' and round-half-to-even(text(),2) = round-half-to-even(262,2)]/following-sibling::cml:scalar[@dictRef='cc:atomType']" value="Lr" />    <transform process="addMap" xpath="." id="atomTypeLabels" from=".//cml:scalar[@dictRef='x:serial']" to=".//cml:scalar[@dictRef='cc:atomType']" />                       
           </template>
       </templateList>
   <transform process="delete" xpath="//cml:list[count(*) = 0]" />
   <transform process="delete" xpath="//cml:list[count(*) = 0]" />
   <transform process="addChild" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']" elementName="cml:list" dictRef="l:axis" />
   <transform process="addChild" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']/cml:list[@dictRef='l:axis']" elementName="cml:array" dictRef="x:lattice1" />
   <transform process="setValue" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']/cml:list[@dictRef='l:axis']/cml:array[@dictRef='x:lattice1']" value="$string(         concat(           number(//cml:scalar[@dictRef='l:xhi'])-number(//cml:scalar[@dictRef='l:xlo']),           ' 0 0')         )" />
   <transform process="addChild" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']/cml:list[@dictRef='l:axis']" elementName="cml:array" dictRef="x:lattice2" />
   <transform process="setValue" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']/cml:list[@dictRef='l:axis']/cml:array[@dictRef='x:lattice2']" value="$string(         concat((           if(exists(//cml:scalar[@dictRef='l:xyTilt'])) then number(//cml:scalar[@dictRef='l:xyTilt']) else '0'),            ' ',            number(//cml:scalar[@dictRef='l:yhi'])-number(//cml:scalar[@dictRef='l:ylo']),           ' 0')         )" />
   <transform process="addChild" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']/cml:list[@dictRef='l:axis']" elementName="cml:array" dictRef="x:lattice3" />
   <transform process="setValue" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']/cml:list[@dictRef='l:axis']/cml:array[@dictRef='x:lattice3']" value="$string(          concat(             if(exists(//cml:scalar[@dictRef='l:xzTilt'])) then number(//cml:scalar[@dictRef='l:xzTilt']) else '0',                          ' ',                         if(exists(//cml:scalar[@dictRef='l:yzTilt'])) then number(//cml:scalar[@dictRef='l:yzTilt']) else '0',             ' ',             number(//cml:scalar[@dictRef='l:zhi'])-number(//cml:scalar[@dictRef='l:zlo']))            )" />
   <transform process="addAttribute" xpath="/cml:module/cml:module[@cmlx:templateRef='atoms']/cml:list[@dictRef='l:axis']/cml:array" name="dictRef" value="cc:lattice" />
   <transform process="delete" xpath="//cml:list[count(*) = 0]" />

.. |image1| image:: ../../imgs/Total.png
.. |image2| image:: ../../imgs/Partial.png
